<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__Categories__CLASSMETADATA__' => 0,
'App__Entity__Ingredient__CLASSMETADATA__' => 1,
'App__Entity__Recipe__CLASSMETADATA__' => 2,
'App__Entity__Step__CLASSMETADATA__' => 3,
'App__Entity__Type__CLASSMETADATA__' => 4,
'App__Entity__UpVote__CLASSMETADATA__' => 5,
'App__Entity__User__CLASSMETADATA__' => 6,
'Vich__UploaderBundle__Entity__File__CLASSMETADATA__' => 7,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToManyInverseSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToManyInverseSideMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Categories',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\CategoriesRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'categories',
                    ],
                ],
                'associationMappings' => [
                    [
                        'recipes' => $o[3],
                    ],
                ],
                'idGenerator' => [
                    $o[4],
                ],
                'name' => [
                    'App\\Entity\\Categories',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'name',
                ],
                'columnName' => [
                    1 => 'id',
                    'name',
                ],
                'length' => [
                    2 => 255,
                ],
                'fetch' => [
                    3 => 2,
                ],
                'sourceEntity' => [
                    3 => 'App\\Entity\\Categories',
                ],
                'mappedBy' => [
                    3 => 'categories',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    3 => 'recipes',
                ],
                'targetEntity' => [
                    3 => 'App\\Entity\\Recipe',
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Ingredient',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\IngredientRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'quantity' => $o[2],
                        'name' => $o[3],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'quantity' => 'quantity',
                        'name' => 'name',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'quantity' => 'quantity',
                        'name' => 'name',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'ingredient',
                    ],
                ],
                'associationMappings' => [
                    [
                        'recipe' => $o[4],
                    ],
                ],
                'idGenerator' => [
                    $o[6],
                ],
                'name' => [
                    'App\\Entity\\Ingredient',
                    5 => 'recipe_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'quantity',
                    'name',
                ],
                'columnName' => [
                    1 => 'id',
                    'quantity',
                    'name',
                ],
                'length' => [
                    3 => 255,
                ],
                'fetch' => [
                    4 => 2,
                ],
                'sourceEntity' => [
                    4 => 'App\\Entity\\Ingredient',
                ],
                'inversedBy' => [
                    4 => 'ingredient',
                ],
                'sourceToTargetKeyColumns' => [
                    4 => [
                        'recipe_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    4 => [
                        'id' => 'recipe_id',
                    ],
                ],
                'joinColumns' => [
                    4 => [
                        $o[5],
                    ],
                ],
                'joinColumnFieldNames' => [
                    4 => [
                        'recipe_id' => 'recipe_id',
                    ],
                ],
                'unique' => [
                    5 => false,
                ],
                'nullable' => [
                    5 => false,
                ],
                'referencedColumnName' => [
                    5 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    4 => 'recipe',
                ],
                'targetEntity' => [
                    4 => 'App\\Entity\\Recipe',
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToManyOwningSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToManyOwningSideMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinTableMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTableMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\ManyToManyOwningSideMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinTableMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Recipe',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\RecipeRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'title' => $o[2],
                        'description' => $o[3],
                        'carbs' => $o[4],
                        'protein' => $o[5],
                        'fat' => $o[6],
                        'calories' => $o[7],
                        'forHowManyPeople' => $o[8],
                        'imageUrl' => $o[9],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'title' => 'title',
                        'description' => 'description',
                        'carbs' => 'carbs',
                        'protein' => 'protein',
                        'fat' => 'fat',
                        'calories' => 'calories',
                        'for_how_many_people' => 'forHowManyPeople',
                        'image_url' => 'imageUrl',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'title' => 'title',
                        'description' => 'description',
                        'carbs' => 'carbs',
                        'protein' => 'protein',
                        'fat' => 'fat',
                        'calories' => 'calories',
                        'forHowManyPeople' => 'for_how_many_people',
                        'imageUrl' => 'image_url',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'recipe',
                    ],
                ],
                'associationMappings' => [
                    [
                        'userID' => $o[10],
                        'upVote' => $o[12],
                        'type' => $o[13],
                        'categories' => $o[17],
                        'step' => $o[21],
                        'ingredient' => $o[22],
                    ],
                ],
                'idGenerator' => [
                    $o[23],
                ],
                'name' => [
                    'App\\Entity\\Recipe',
                    11 => 'user_id_id',
                    14 => 'recipe_type',
                    'recipe_id',
                    'type_id',
                    18 => 'recipe_categories',
                    'recipe_id',
                    'categories_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'float',
                    'float',
                    'float',
                    'integer',
                    'integer',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'title',
                    'description',
                    'carbs',
                    'protein',
                    'fat',
                    'calories',
                    'forHowManyPeople',
                    'imageUrl',
                ],
                'columnName' => [
                    1 => 'id',
                    'title',
                    'description',
                    'carbs',
                    'protein',
                    'fat',
                    'calories',
                    'for_how_many_people',
                    'image_url',
                ],
                'length' => [
                    2 => 255,
                    255,
                    9 => 255,
                ],
                'fetch' => [
                    10 => 2,
                    12 => 2,
                    2,
                    17 => 2,
                    21 => 2,
                    2,
                ],
                'sourceEntity' => [
                    10 => 'App\\Entity\\Recipe',
                    12 => 'App\\Entity\\Recipe',
                    'App\\Entity\\Recipe',
                    17 => 'App\\Entity\\Recipe',
                    21 => 'App\\Entity\\Recipe',
                    'App\\Entity\\Recipe',
                ],
                'inversedBy' => [
                    10 => 'recipe',
                    13 => 'recipes',
                    17 => 'recipes',
                ],
                'sourceToTargetKeyColumns' => [
                    10 => [
                        'user_id_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    10 => [
                        'id' => 'user_id_id',
                    ],
                ],
                'joinColumns' => [
                    10 => [
                        $o[11],
                    ],
                    14 => [
                        $o[15],
                    ],
                    18 => [
                        $o[19],
                    ],
                ],
                'joinColumnFieldNames' => [
                    10 => [
                        'user_id_id' => 'user_id_id',
                    ],
                ],
                'unique' => [
                    11 => false,
                ],
                'nullable' => [
                    11 => false,
                ],
                'referencedColumnName' => [
                    11 => 'id',
                    15 => 'id',
                    'id',
                    19 => 'id',
                    'id',
                ],
                'mappedBy' => [
                    12 => 'recipe',
                    21 => 'recipe',
                    'recipe',
                ],
                'isOnDeleteCascade' => [
                    13 => true,
                    17 => true,
                ],
                'joinTable' => [
                    13 => $o[14],
                    17 => $o[18],
                ],
                'joinTableColumns' => [
                    13 => [
                        'recipe_id',
                        'type_id',
                    ],
                    17 => [
                        'recipe_id',
                        'categories_id',
                    ],
                ],
                'relationToSourceKeyColumns' => [
                    13 => [
                        'recipe_id' => 'id',
                    ],
                    17 => [
                        'recipe_id' => 'id',
                    ],
                ],
                'relationToTargetKeyColumns' => [
                    13 => [
                        'type_id' => 'id',
                    ],
                    17 => [
                        'categories_id' => 'id',
                    ],
                ],
                'inverseJoinColumns' => [
                    14 => [
                        $o[16],
                    ],
                    18 => [
                        $o[20],
                    ],
                ],
                'onDelete' => [
                    15 => 'CASCADE',
                    'CASCADE',
                    19 => 'CASCADE',
                    'CASCADE',
                ],
                'cascade' => [
                    22 => [
                        'remove',
                    ],
                ],
                'orphanRemoval' => [
                    22 => true,
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    10 => 'userID',
                    12 => 'upVote',
                    'type',
                    17 => 'categories',
                    21 => 'step',
                    'ingredient',
                ],
                'targetEntity' => [
                    10 => 'App\\Entity\\User',
                    12 => 'App\\Entity\\upVote',
                    'App\\Entity\\Type',
                    17 => 'App\\Entity\\Categories',
                    21 => 'App\\Entity\\Step',
                    'App\\Entity\\Ingredient',
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Step',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\StepRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'description' => $o[2],
                        'number' => $o[3],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'description' => 'description',
                        'number' => 'number',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'description' => 'description',
                        'number' => 'number',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'step',
                    ],
                ],
                'associationMappings' => [
                    [
                        'recipe' => $o[4],
                    ],
                ],
                'idGenerator' => [
                    $o[6],
                ],
                'name' => [
                    'App\\Entity\\Step',
                    5 => 'recipe_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'integer',
                ],
                'fieldName' => [
                    1 => 'id',
                    'description',
                    'number',
                ],
                'columnName' => [
                    1 => 'id',
                    'description',
                    'number',
                ],
                'length' => [
                    2 => 255,
                ],
                'fetch' => [
                    4 => 2,
                ],
                'sourceEntity' => [
                    4 => 'App\\Entity\\Step',
                ],
                'inversedBy' => [
                    4 => 'step',
                ],
                'sourceToTargetKeyColumns' => [
                    4 => [
                        'recipe_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    4 => [
                        'id' => 'recipe_id',
                    ],
                ],
                'joinColumns' => [
                    4 => [
                        $o[5],
                    ],
                ],
                'joinColumnFieldNames' => [
                    4 => [
                        'recipe_id' => 'recipe_id',
                    ],
                ],
                'unique' => [
                    5 => false,
                ],
                'nullable' => [
                    5 => false,
                ],
                'referencedColumnName' => [
                    5 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    4 => 'recipe',
                ],
                'targetEntity' => [
                    4 => 'App\\Entity\\Recipe',
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToManyInverseSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToManyInverseSideMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Type',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\TypeRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'type',
                    ],
                ],
                'associationMappings' => [
                    [
                        'recipes' => $o[3],
                    ],
                ],
                'idGenerator' => [
                    $o[4],
                ],
                'name' => [
                    'App\\Entity\\Type',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'name',
                ],
                'columnName' => [
                    1 => 'id',
                    'name',
                ],
                'length' => [
                    2 => 255,
                ],
                'fetch' => [
                    3 => 2,
                ],
                'sourceEntity' => [
                    3 => 'App\\Entity\\Type',
                ],
                'mappedBy' => [
                    3 => 'type',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    3 => 'recipes',
                ],
                'targetEntity' => [
                    3 => 'App\\Entity\\Recipe',
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\UpVote',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UpVoteRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'up_vote',
                    ],
                ],
                'associationMappings' => [
                    [
                        'userID' => $o[2],
                        'recipe' => $o[4],
                    ],
                ],
                'idGenerator' => [
                    $o[6],
                ],
                'name' => [
                    'App\\Entity\\UpVote',
                    3 => 'user_id_id',
                    5 => 'recipe_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                ],
                'fieldName' => [
                    1 => 'id',
                ],
                'columnName' => [
                    1 => 'id',
                ],
                'fetch' => [
                    2 => 2,
                    4 => 2,
                ],
                'sourceEntity' => [
                    2 => 'App\\Entity\\UpVote',
                    4 => 'App\\Entity\\UpVote',
                ],
                'inversedBy' => [
                    2 => 'upVote',
                    4 => 'upVote',
                ],
                'sourceToTargetKeyColumns' => [
                    2 => [
                        'user_id_id' => 'id',
                    ],
                    4 => [
                        'recipe_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    2 => [
                        'id' => 'user_id_id',
                    ],
                    4 => [
                        'id' => 'recipe_id',
                    ],
                ],
                'joinColumns' => [
                    2 => [
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                    ],
                ],
                'joinColumnFieldNames' => [
                    2 => [
                        'user_id_id' => 'user_id_id',
                    ],
                    4 => [
                        'recipe_id' => 'recipe_id',
                    ],
                ],
                'unique' => [
                    3 => false,
                    5 => false,
                ],
                'nullable' => [
                    3 => false,
                    5 => false,
                ],
                'referencedColumnName' => [
                    3 => 'id',
                    5 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    2 => 'userID',
                    4 => 'recipe',
                ],
                'targetEntity' => [
                    2 => 'App\\Entity\\User',
                    4 => 'App\\Entity\\Recipe',
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'email' => $o[2],
                        'roles' => $o[3],
                        'password' => $o[4],
                        'firstname' => $o[5],
                        'lastname' => $o[6],
                        'createdAt' => $o[7],
                        'dgprAcceptationDate' => $o[8],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'firstname' => 'firstname',
                        'lastname' => 'lastname',
                        'created_at' => 'createdAt',
                        'dgpr_acceptation_date' => 'dgprAcceptationDate',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'firstname' => 'firstname',
                        'lastname' => 'lastname',
                        'createdAt' => 'created_at',
                        'dgprAcceptationDate' => 'dgpr_acceptation_date',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user',
                        'quoted' => true,
                        'uniqueConstraints' => [
                            'UNIQ_IDENTIFIER_EMAIL' => [
                                'fields' => [
                                    'email',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'recipe' => $o[9],
                        'upVote' => $o[10],
                    ],
                ],
                'idGenerator' => [
                    $o[11],
                ],
                'name' => [
                    'App\\Entity\\User',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'json',
                    'string',
                    'string',
                    'string',
                    'date',
                    'date',
                ],
                'fieldName' => [
                    1 => 'id',
                    'email',
                    'roles',
                    'password',
                    'firstname',
                    'lastname',
                    'createdAt',
                    'dgprAcceptationDate',
                ],
                'columnName' => [
                    1 => 'id',
                    'email',
                    'roles',
                    'password',
                    'firstname',
                    'lastname',
                    'created_at',
                    'dgpr_acceptation_date',
                ],
                'length' => [
                    2 => 180,
                    5 => 255,
                    255,
                ],
                'fetch' => [
                    9 => 2,
                    2,
                ],
                'sourceEntity' => [
                    9 => 'App\\Entity\\User',
                    'App\\Entity\\User',
                ],
                'mappedBy' => [
                    9 => 'userID',
                    'userID',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    9 => 'recipe',
                    'upVote',
                ],
                'targetEntity' => [
                    9 => 'App\\Entity\\Recipe',
                    'App\\Entity\\UpVote',
                ],
            ],
        ],
        $o[0],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'Vich\\UploaderBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Vich\\UploaderBundle\\Entity\\File',
                ],
                'isEmbeddedClass' => [
                    true,
                ],
                'fieldMappings' => [
                    [
                        'name' => $o[1],
                        'originalName' => $o[2],
                        'mimeType' => $o[3],
                        'size' => $o[4],
                        'dimensions' => $o[5],
                    ],
                ],
                'fieldNames' => [
                    [
                        'name' => 'name',
                        'original_name' => 'originalName',
                        'mime_type' => 'mimeType',
                        'size' => 'size',
                        'dimensions' => 'dimensions',
                    ],
                ],
                'columnNames' => [
                    [
                        'name' => 'name',
                        'originalName' => 'original_name',
                        'mimeType' => 'mime_type',
                        'size' => 'size',
                        'dimensions' => 'dimensions',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'file',
                    ],
                ],
                'idGenerator' => [
                    $o[6],
                ],
                'name' => [
                    'Vich\\UploaderBundle\\Entity\\File',
                ],
                'nullable' => [
                    1 => true,
                    true,
                    true,
                    true,
                    true,
                ],
                'type' => [
                    1 => 'string',
                    'string',
                    'string',
                    'integer',
                    'simple_array',
                ],
                'fieldName' => [
                    1 => 'name',
                    'originalName',
                    'mimeType',
                    'size',
                    'dimensions',
                ],
                'columnName' => [
                    1 => 'name',
                    'original_name',
                    'mime_type',
                    'size',
                    'dimensions',
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
